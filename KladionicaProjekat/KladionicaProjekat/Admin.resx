<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iY1uQa0DwUg//9k=
</value>
  </data>
</root>