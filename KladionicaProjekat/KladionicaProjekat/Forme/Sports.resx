<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>