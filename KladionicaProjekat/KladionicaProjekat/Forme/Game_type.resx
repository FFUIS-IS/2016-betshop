<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>