<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qdFGHPbHJO64bKQyMcCGXu/1JHkVTc0yxa8Uj0XXKsVq1m89p7J8qtbiAgICAgICAgIIl0mYI+qo/sml
        80UglY1vtPFi17Rz7JJtxLQpPCZYx5PHsi8ZhnJj8O8OFyNLSWuBa4GzmuBa5p5EHUK7i0T2UU1mJ8VL
        rLXSt0BBW6yPL9x8FiezNe61GVpVtZ9N4NHlp4W+7BG30YAvP3ndpl6PHGqx8MxatxBZq4s7Hs95jm+o
        IWYnU7YtG40+camF7CWvaWuYcjgeDm6EeoXqImJjceryc+FumfRili00329Biz0sbewxbRDWZXGtW0Q1
        mW1wDCn1M7IWaZndo+4waud5D42HFa5ssYsc3lthxTmyRSPV3qkpmRsbGwZWMaGtHJoFgvMWtNpm095e
        rpWK1isdoXlq2EBAQEBAQEBAQEGDiWD01QLVEMU3LrGNcR4HePJbVvavllpbHW3mhEcU6K6GS5gdNTO4
        Brutjv3tfc+jgpVONyR38UW/A47dvBEsU6La6O5hfDUt4AHqZD/ld2f4lKpx9J80aRL8vvHlnaJ4lhFT
        T/7xBNF3vY7J5P8AZPkVKpmpftKJfBeneGFddduWlUYZFJh5kc1kd8z3BjRzLiGj4lYmIrE2n0Zieq0R
        Hq+l422AA3AWHkvNvTx4Q9IyICCO4/sbR1bi+Rr2Sne+J2VzrbrggtJ77XUnDxeXFGonw9pRM3BYss9U
        x4+8IhiHRY8XNPUMdybMwsP5m3v6BTaczj9df7IOTldv0W/uj1bsRXxXvA545xFsl/Idr4KZTjMFv1a+
        f/tIeTgs9P07+PFpp6KSPSRj4zyexzD8QpNZrbyzEol62r5omP2UjiJsBqToLbyeS6a13c978HWejnZ1
        1PGZpWls0ugDhZ0cW8AjgSdSO5qoeYcTGS/TWfCPzL0PLeFnFTrtHjP4hM1XLMQEBAQEBAQEBAQEBAQE
        FHC+h1HFBH8U2Kw6e5fTRtcfvRXhdfmSy1/O67U4jJTtLjfh8d+8IliXRGw601S9n92dgkHhmblt6FSa
        cfaPNCJfl9Z8stjsX0fmll66pfHI9v7oRh2UOtbOS4DW24JxHG/Up0VjXucPwEY79dp37J6oCxEBAQEB
        AQUIvvQW2U7Gm7WsB5hoBWdy16Y9l1YbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICAgIP//Z
</value>
  </data>
</root>